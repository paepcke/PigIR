#!/bin/bash

# Script that runs the PigScript smoothNgrams.pig with command line
# parameters. The script takes two arguments:
#
#   1. An ngrams file of format: ngramCount,word1,word2,...
#   2. A GoodTuring result file of format: frequency,probability
#
# If the --limit option is provided, it specifies 'n' for top-n frequency occurrence
# probability. Included in the output are only ngrams with a follower probabiliy 
# in the top-n among all probabilities ngrams with the same word, but a different follower.
#
# Output: probability,word1,word2,...
#

USAGE="Usage: smoothNgrams [{-h | --help}] \n
                           \t\t\t [{-v | --version}] \n
                           \t\t\t [{-x | --execmode] {local | mapreduce}] \n
                           \t\t\t [{-d | --destdir} <destinationDirectory>] (default: pwd if execmode==local; else '/user/<username>') \n
			   \t\t\t [{-l | --limit} <integer> :probability inclusion threshold; the 'n' in top-n (default: all) \n
                           \t\t\t <ngramFilePathOnHDFS> \n
			   \t\t\t <freqProbabilityFilePathOnHDFS> \n

    \tExample: smoothNgrams Datasets/googleNgrams.csv Datasets/goodTuringOutput.csv \n
    \tExample: smoothNgrams Datasets/googleNgrams.csv Datasets/goodTuringOutput.csv 10 \n
    \t         Includes only ngrams with a follower probabiliy in the top-n among all \n
    \t         probabilities of other ngrams for the same word, but a different follower."

PROGVERSION=1.0
EXEC_MODE=mapreduce
#EXEC_MODE=local

SHORTOPTS="hvx:d:l:"
LONGOPTS="help,version,execmode:,destdir:,limit:"

ARGS=`getopt -s bash --options=$SHORTOPTS  \
  --longoptions=$LONGOPTS --name=$PROGNAME -- "$@"`

eval set -- "$ARGS"

while true; do
   case $1 in
      -h|--help)
         echo -e $USAGE
         exit 0
         ;;
      -v|--version)
         echo "$PROGVERSION"
	 exit 0
         ;;
      -x|--execmode)
         shift
         EXEC_MODE=$1
         ;;
      -d|--destdir)
         shift
         DEST_DIR=$1
         ;;
      -l|--limit)
         shift
	 LIMIT=$1
	 ;;
      --)
         shift
         break
         ;;
      *)
         shift
         break
         ;;
   esac
   # Throw away the '--' that's added by getopt.
   # The -- case above doesn't get hit when user
   # forgets to put in any required args.
   shift
done

if [ -z $DEST_DIR ]
then    
    if [ $EXEC_MODE == local ] 
    	then
    	    DEST_DIR=`pwd`
    	else
    	    DEST_DIR='/user/'`whoami`
    fi     
fi    

if [ -z $LIMIT ]
then
	LIMIT=-1
fi    

if [ $# -gt 2 ] 
then
    echo "Too many arguments: $#"
    echo -e $USAGE
    exit -1
fi      

if [ $# -lt 2 ] 
then
    echo "Missing one or both of the script arguments."
    echo -e $USAGE
    exit -1
else
    NGRAM_PATH=$1
    FREQ_DISTRIB_PATH=$2
fi

# If we are running in cygwin, we have to convert the 
# path to the Pig script into a Windows path:

export SCRIPT_DIR=`dirname $0`
if [[ `uname` == *CYGWIN* ]]
then 
  export SCRIPT_DIR=`cygpath --mixed ${SCRIPT_DIR}`
fi

# Check whether the output target file exists.
# If so, Pig would run for a long time, and then die. Make
# this more fail-fast:

EXISTENCE=`hadoop fs -stat ${DEST_DIR}/${NGRAM_PATH}_smoothed.gz 2> /dev/null` 
if [ -n "$EXISTENCE" ]
then
    echo "File ${DEST_DIR}/${NGRAM_PATH}_smoothed.gz already exists. Quitting."
    exit -1
fi

echo "Starting warcSetAside:
Exec mode: -x $EXEC_MODE
Input ngram file  : $NGRAM_PATH
Input freqDist file  : $FREQ_DISTRIB_PATH
Limit: $PERCENTAGE
Output file: ${DEST_DIR}/${NGRAM_PATH}_smoothed.gz"

# Units her are in MB. Default is 1000MB=1GB
# Increase that for this run to 10GB:
export PIG_HEAPSIZE=10000

pigrun -x $EXEC_MODE \
       DEST_SMOOTH_NGRAMS=${DEST_DIR}/${NGRAM_PATH}_smoothed.gz \
       NGRAM_FILE=$NGRAM_PATH \
       FREQS_FILE=$FREQ_DISTRIB_PATH \
       LIMIT=$LIMIT \
       ${SCRIPT_DIR}/smoothNgrams.pig

exit 0

