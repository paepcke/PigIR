#!/bin/bash

# Script that runs the PigScript ngrams.pig with
# command line parameters. Output will be at
# ${DEST_DIR}/${WARC_NAME}_ngrams.csv.gz. It is an 
# error if that file already exists. Arity is the
# integer 'n' in 'ngrams'. Ex. arity=3 produces trigrams.

USAGE="Usage: warcNgrams  [{-h | --help}] \n
                           \t\t\t [{-v | --version}] \n
                           \t\t\t [{-x | --execmode] {local | mapreduce}] \n
                           \t\t\t [{-s | --stopwords}] (default: no stopword removal) \n
                           \t\t\t [{-i | --minlength}] (default: 2)\n
                           \t\t\t [{-a | --maxlength}] (default: 20)\n
                           \t\t\t [{-d | --destdir} <destinationDirectory>] (default: pwd if execmode==local; else '/user/<username>') \n
                           \t\t\t <warcFilePathOnHDFS> \n
                           \t\t\t <arity> \n
    \tExample: warcNgrams -d /user/doe/myngrams Dataset/gov-04-2007.warc 2\n"

PROGVERSION=1.0
EXEC_MODE=mapreduce
NUM_PAGES=""
START_SITE=""
END_SITE=""
FILTER_STOPWORDS=0
WORD_LEN_MIN=2
WORD_LEN_MAX=20


SHORTOPTS="hvsx:d:i:a:"
LONGOPTS="help,version,stopwords,execmode:,destdir:,minlength:,maxlength:"

ARGS=`getopt -s bash --options=$SHORTOPTS  \
  --longoptions=$LONGOPTS --name=$PROGNAME -- "$@"`

eval set -- "$ARGS"

while true; do
   case $1 in
      -h|--help)
         echo -e $USAGE
         exit 0
         ;;
      -v|--version)
         echo "$PROGVERSION"
	 exit 0
         ;;
      -x|--execmode)
         shift
         EXEC_MODE=$1
         ;;
      -s|--stopwords)
	 FILTER_STOPWORDS=1
	 ;;
      -i|--minlength)
	 shift
	 WORD_LEN_MIN=$1
	 ;;
      -a|--maxlength)
	 shift
	 WORD_LEN_MAX=$1
	 ;;
      -d|--destdir)
         shift
         DEST_DIR=$1
         ;;
      -n|--numpages)
         shift
         NUM_PAGES=$1
         ;;
      -s|--startsite)
         shift
         START_SITE=$1
         ;;
      -e|--endsite)
         shift
         END_SITE=$1
         ;;
      --)
         shift
         break
         ;;
      *)
         shift
         break
         ;;
   esac
   # Throw away the '--' that's added by getopt.
   # The -- case above doesn't get hit when user
   # forgets to put in any required args.
   shift
done

if [ -z $DEST_DIR ]
then    
    if [ $EXEC_MODE == local ] 
    	then
    	    DEST_DIR=`pwd`
    	else
    	    DEST_DIR='/user/'`whoami`
    fi     
fi    

# echo "execMode : '$EXEC_MODE'"
# echo "destDir  : '$DEST_DIR'"
# echo "numPages : '$NUM_PAGES'"
# echo "startSite: '$START_SITE'"
# echo "endSite  : '$END_SITE'"
# echo "crawl: '$1'"

if [ $# -lt 2 ] 
then
    echo "Missing crawl name or arity."
    echo -e $USAGE
    exit -1
else
    WARC_NAME=$1
    ARITY=$2
fi

# If we are running in cygwin, we have to convert the 
# path to the Pig script into a Windows path:

export SCRIPT_DIR=`dirname $0`
if [[ `uname` == *CYGWIN* ]]
then 
  export SCRIPT_DIR=`cygpath --mixed ${SCRIPT_DIR}`
fi

# Check whether the word count target file exists.
# If so, Pig would run for a long time, and then die. Make
# this more fail-fast:

EXISTENCE=`hadoop fs -stat ${DEST_DIR}/${WARC_NAME}_ngrams.csv.gz 2> /dev/null` 
if [ -n "$EXISTENCE" ]
then
    echo "File ${DEST_DIR}/${WARC_NAME}_ngrams.csv.gz already exists. Quitting."
    exit -1
fi

echo "Starting warcNgrams:
Exec mode: -x $EXEC_MODE
Input file : $WARC_NAME
Output file: ${DEST_DIR}/${WARC_NAME}_ngrams.csv.gz
Arity: $ARITY"

# Units her are in MB. Default is 1000MB=1GB
# Increase that for this run to 10GB:
export PIG_HEAPSIZE=10000

pigrun -x $EXEC_MODE \
       FILTER_STOPWORDS=${FILTER_STOPWORDS} \
       WORD_LEN_MIN=${WORD_LEN_MIN} \
       WORD_LEN_MAX=${WORD_LEN_MAX} \
       NGRAM_DEST=${DEST_DIR}/${WARC_NAME}_ngrams.csv.gz \
       ARITY=$ARITY \
       WARC_FILE=$WARC_NAME \
       ${SCRIPT_DIR}/warcNgrams.pig

exit 0

