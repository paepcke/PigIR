#!/bin/bash

# Script that runs the PigScript warcRecordCount.pig with
# command line paramters.

USAGE="Usage: warcRecordCount [{-h | --help}] \n
                           \t\t\t [{-x | --execmode] {local | mapreduce}] \n
                           \t\t\t <warcFilePathOrDirOnHDFS> \n
    \tExample: warRecordCount Dataset/gov-04-2007.warc \n
    \tExample: warRecordCount Dataset/myWarcDir \n"


EXEC_MODE=mapreduce

SHORTOPTS="hx:"
LONGOPTS="help,execmode:"

ARGS=`getopt -s bash --options=$SHORTOPTS  \
  --longoptions=$LONGOPTS --name=$PROGNAME -- "$@"`

eval set -- "$ARGS"

while true; do
   case $1 in
      -h|--help)
         echo -e $USAGE
         exit 0
         ;;
      -x|--execmode)
         shift
         EXEC_MODE=$1
         ;;
      --)
         shift
         break
         ;;
      *)
         shift
         break
         ;;
   esac
   # Throw away the '--' that's added by getopt.
   # The -- case above doesn't get hit when user
   # forgets to put in any required args.
   shift
done

# echo "execMode : '$EXEC_MODE'"
# echo "file(s) to count records in: '$1'"

if [ $# == 0 ] 
then
    echo "Missing path to warc file or directory."
    echo -e $USAGE
    exit -1
else
    WARC_NAME=$1
fi

# If we are running in cygwin, we have to convert the 
# path to the Pig script into a Windows path:

export SCRIPT_DIR=`dirname $0`
if [[ `uname` == *CYGWIN* ]]
then 
  export SCRIPT_DIR=`cygpath --mixed ${SCRIPT_DIR}`
fi

echo "Starting warcRecordCount:
Exec mode: -x $EXEC_MODE
Input file : $WARC_NAME"

# pigrun -x $EXEC_MODE \
#         WARC_FILE=$WARC_NAME \
#         ${SCRIPT_DIR}/warcRecordCount.pig

exit 0
